{"version":3,"sources":["cmps/DropDown.jsx","store/action/bitcoin.action.js","cmps/Header.jsx","services/bitcoinServices.js","cmps/BitcoinChart.jsx","cmps/BitcoinTable.jsx","routes.js","pages/OverView.jsx","pages/History.jsx","cmps/Footer.jsx","cmps/Tabs.jsx","App.js","reportWebVitals.js","store/reducer/bitcoin.reducer.js","store/store.js","index.js"],"names":["DropDown","dispatch","useDispatch","React","setCoin","useState","coinTypeName","setcoinTypeName","open","setOpen","className","FormControl","variant","sx","m","minWidth","src","alt","InputLabel","id","toUpperCase","Select","labelId","label","value","onChange","event","target","onClose","onOpen","coins","map","coin","MenuItem","onClick","coinType","nameCode","imgUrl","coinName","type","setCoinType","setCoinImg","setCoinName","Header","currBitcoinRate","setCurrBitcoinRate","percentChange","setpercentChange","coinValueChange","setcoinValueChange","lastUpdate","setLastUpdate","previousCoin","setPreviousCoin","useSelector","state","bitcoinModule","currCoinImg","ws","useRef","useEffect","current","WebSocket","onopen","e","send","JSON","stringify","instruments","onmessage","data","parse","last","change","onerror","error","wsCurrent","onclose","close","toLocaleString","href","substring","bitcoinService","getPriceBy","timeType","aggregate","axios","get","then","res","BitcoinChart","bitcoinData","setbitcoinData","getBitcoinData","console","log","prices","price","name","Date","split","reverse","join","uv","High","pv","Low","amt","Open","buttons","Button","length","ButtonGroup","size","AreaChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","stroke","fill","color","timeout","BitcoinTable","coinRows","setcoinRows","rows","createData","Close","date","high","low","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","border","scope","routes","path","Footer","Tabs","to","App","route","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1da4db6d.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport {\r\n  setCoinType,\r\n  setCoinImg,\r\n  setCoinName,\r\n} from \"../store/action/bitcoin.action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport coins from \"../data/coin.json\";\r\n\r\nexport function DropDown() {\r\n  const dispatch = useDispatch();\r\n  const [coin, setCoin] = React.useState(\"\");\r\n  const [coinTypeName, setcoinTypeName] = useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setCoin(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const setCurrCoin = (coinType, imgUrl, coinName) => {\r\n    setcoinTypeName(coinType);\r\n    dispatch(setCoinType(coinType));\r\n    dispatch(setCoinImg(imgUrl));\r\n    dispatch(setCoinName(coinName));\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div className=\"drop-down\">\r\n      <FormControl variant=\"outlined\" sx={{ m: 2, minWidth: 300 }}>\r\n        <div className=\"coin-choosing-text\">\r\n          Choose Your Coin{\" \"}\r\n          <img\r\n            className=\"coin-symbol\"\r\n            src=\"https://www.iconpacks.net/icons/2/free-cryptocurrency-coin-icon-2457-thumb.png\"\r\n            alt=\"\"\r\n          />{\" \"}\r\n        </div>\r\n        <InputLabel id=\"demo-simple-select-standard-label\">\r\n          {coinTypeName.toUpperCase()}\r\n        </InputLabel>\r\n        <Select\r\n          className=\"select-container\"\r\n          labelId=\"demo-simple-select-standard-label\"\r\n          id=\"demo-simple-select-standard\"\r\n          label={coinTypeName}\r\n          value={coinTypeName}\r\n          onChange={handleChange}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          open={open}\r\n        >\r\n          {coins.map((coin) => {\r\n            return (\r\n              <div className=\"coins-container\">\r\n                <MenuItem\r\n                  onClick={() =>\r\n                    setCurrCoin(coin.nameCode, coin.imgUrl, coin.coinName)\r\n                  }\r\n                  value={coin.nameCode}\r\n                >\r\n                  {coin.coinName}{\" \"}\r\n                  <span>\r\n                    <img className=\"coin-logo\" src={coin.imgUrl} alt=\"\" />\r\n                  </span>\r\n                </MenuItem>\r\n              </div>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export function setCoinType(coinType) {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'SET_COIN_TYPE',\r\n        coinType\r\n      }\r\n      dispatch(action)\r\n  }\r\n}\r\nexport function setCoinImg(imgUrl) {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'SET_COIN_IMG',\r\n        imgUrl\r\n      }\r\n      dispatch(action)\r\n  }\r\n}\r\nexport function setCoinName(coinName) {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'SET_COIN_NAME',\r\n        coinName\r\n      }\r\n      dispatch(action)\r\n  }\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DropDown } from \"../cmps/DropDown\";\r\n\r\nexport function Header() {\r\n  const [currBitcoinRate, setCurrBitcoinRate] = useState(\"N/A\");\r\n  const [percentChange, setpercentChange] = useState(\"N/A\");\r\n  const [coinValueChange, setcoinValueChange] = useState(\"N/A\");\r\n  const [lastUpdate, setLastUpdate] = useState(\"N/A\");\r\n  const [previousCoin, setPreviousCoin] = useState(\"N/A\");\r\n\r\n  const { coinType, currCoinImg, coinName} = useSelector((state) => state.bitcoinModule);\r\n  const ws = useRef(null);\r\n\r\n  useEffect(() => {\r\n    ws.current = new WebSocket(\"wss://wstest.fxempire.com?token=btctothemoon\");\r\n    ws.current.onopen = function (e) {\r\n      ws.current.send(\r\n        JSON.stringify({\r\n          type: \"SUBSCRIBE\",\r\n          instruments: [`cc-${coinType}-usd-cccagg`],\r\n        })\r\n      );\r\n    };\r\n\r\n    ws.current.onmessage = function (event) {\r\n      let data = JSON.parse(event.data);\r\n      setCurrBitcoinRate(data[`cc-${coinType}-usd-cccagg`].last);\r\n      setpercentChange(data[`cc-${coinType}-usd-cccagg`].percentChange);\r\n      setcoinValueChange(data[`cc-${coinType}-usd-cccagg`].change);\r\n      setLastUpdate(data[`cc-${coinType}-usd-cccagg`].lastUpdate);\r\n    };\r\n\r\n    ws.current.onerror = function (error) {};\r\n    setPreviousCoin(coinType);\r\n    const wsCurrent = ws.current;\r\n\r\n    ws.current.onclose = function (event) {\r\n      wsCurrent.send(\r\n        JSON.stringify({\r\n          type: \"UNSUBSCRIBE\",\r\n          instruments: [`cc-${previousCoin}-usd-cccagg`],\r\n        })\r\n      );\r\n    };\r\n\r\n    return () => {\r\n      wsCurrent.close();\r\n    };\r\n  }, [coinType]);\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      <h1 className=\"flicker\" data-heading=\"B\">\r\n        itcoin<span className=\"green-point\">.</span>\r\n      </h1>\r\n      <div className=\"drop-down-container\">\r\n        <DropDown />\r\n         {/* <img className=\"coin-hero-header\" src={currCoinImg} alt=\"\" /></a> */}\r\n        <span className=\"coin-type-hero\">{coinType.toUpperCase()}{<img className=\"coin-hero-input\" src={currCoinImg} alt=\"\" />}</span>\r\n      </div>\r\n      <div className=\"live-stream\">\r\n        <div>\r\n          <span>\r\n            <img\r\n              className=\"arrow animate-flicker\"\r\n              src={\r\n                percentChange > 0\r\n                  ? `https://upload.wikimedia.org/wikipedia/commons/thumb/b/bd/Dark_Green_Arrow_Up.svg/1200px-Dark_Green_Arrow_Up.svg.png`\r\n                  : `https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Red_Arrow_Down.svg/1200px-Red_Arrow_Down.svg.png`\r\n              }\r\n              alt=\"\"\r\n            />\r\n          </span>\r\n          ${currBitcoinRate.toLocaleString()}\r\n        </div>\r\n        <div className=\"presents\">\r\n          <span\r\n            className={\r\n              percentChange > 0 ? \"price-change-green\" : \"price-change-red\"\r\n            }\r\n          >\r\n            {coinValueChange.toLocaleString()}\r\n          </span>\r\n          ({percentChange}%)\r\n        </div>\r\n        <div className=\"last-update\">\r\n        <a href={`https://coinmarketcap.com/currencies/${coinName}/`}> <img className=\"header-coin-iqon\" src={currCoinImg} alt=\"\" /></a>\r\n          last update : {lastUpdate.substring(11, 16)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios'\r\n\r\nexport const bitcoinService = {\r\n    getPriceBy\r\n}\r\n\r\nfunction getPriceBy(timeType, aggregate, coinType) {\r\n    return axios.get(`https://www.fxempire.com/api/v1/en/crypto-coin/chart/candles/${timeType}?aggregate=${aggregate}&e=CCCAGG&fsym=${coinType}&tsym=usd&limit=30`).then(res => res.data)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { bitcoinService } from \"../services/bitcoinServices\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nexport function BitcoinChart() {\r\n  const [bitcoinData, setbitcoinData] = useState([]);\r\n\r\n  const { coinType, currCoinImg } = useSelector((state) => state.bitcoinModule);\r\n\r\n  useEffect(() => {\r\n    getBitcoinData(\"histohour\", 1);\r\n    console.log(bitcoinData[2]);\r\n  }, [coinType]);\r\n\r\n  const getBitcoinData = (timeType, aggregate) => {\r\n    bitcoinService.getPriceBy(timeType, aggregate, coinType).then((prices) => {\r\n      let data = prices.data.map((price) => {\r\n        if (timeType === \"histoday\") {\r\n          return {\r\n            name: price.Date.substring(5, 10).split(\"/\").reverse().join(\"/\"),\r\n            uv: price.High,\r\n            pv: price.Low,\r\n            amt: price.Open,\r\n          };\r\n        } else {\r\n          return {\r\n            name: price.Date.substring(10, 16),\r\n            uv: price.High,\r\n            pv: price.Low,\r\n            amt: price.Open,\r\n          };\r\n        }\r\n      });\r\n      setbitcoinData(data);\r\n      console.log(bitcoinData);\r\n    });\r\n  };\r\n\r\n  const buttons = [\r\n    <Button onClick={() => getBitcoinData(\"histominute\", 1)} key=\"one\">\r\n      1 Min\r\n    </Button>,\r\n    <Button onClick={() => getBitcoinData(\"histominute\", 5)} key=\"two\">\r\n      5 Min{\" \"}\r\n    </Button>,\r\n    <Button onClick={() => getBitcoinData(\"histohour\", 1)} key=\"two\">\r\n      1 Hour{\" \"}\r\n    </Button>,\r\n    <Button onClick={() => getBitcoinData(\"histoday\", 7)} key=\"two\">\r\n      1 Week{\" \"}\r\n    </Button>,\r\n  ];\r\n\r\n  if (!bitcoinData.length)\r\n    return (\r\n      <div className=\"loader\">\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          top={50}\r\n          margin-top={-50}\r\n          margin-left={0}\r\n          margin-right={0}\r\n          timeout={4000} //3 secs\r\n        />\r\n      </div>\r\n    );\r\n  return (\r\n    <div className=\"overview-container\">\r\n      <div className=\"top-container\">\r\n        <ButtonGroup\r\n          className=\"buttons-group\"\r\n          variant=\"outlined\"\r\n          size=\"large\"\r\n          aria-label=\"large button group\"\r\n        >\r\n          {buttons}\r\n        </ButtonGroup>\r\n        <div className=\"arrows-container\">\r\n          <div className=\"positive-value\">\r\n            High: <span className=\"dollar-sign\">$</span>\r\n            {bitcoinData[30].uv.toLocaleString()}\r\n            <img\r\n              className=\"arrow2 animate-flicker\"\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bd/Dark_Green_Arrow_Up.svg/1200px-Dark_Green_Arrow_Up.svg.png\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"header-coin-iqon-contianer\">\r\n            <img className=\"header-coin-iqon\" src={currCoinImg} alt=\"\" />\r\n            <span className=\"cointype-white\">{coinType}</span>\r\n          </div>\r\n          <div className=\"negative-value\">\r\n            Low: <span className=\"dollar-sign\">$</span>\r\n            {bitcoinData[30].pv.toLocaleString()}\r\n            <img\r\n              className=\"arrow3 animate-flicker\"\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Red_Arrow_Down.svg/1200px-Red_Arrow_Down.svg.png\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div></div>\r\n        <AreaChart\r\n          className=\"area-charts\"\r\n          width={1400}\r\n          height={500}\r\n          data={bitcoinData}\r\n          margin={{\r\n            top: 10,\r\n            right: 0,\r\n            left: 0,\r\n            bottom: 100,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Area\r\n            type=\"linear\"\r\n            dataKey=\"uv\"\r\n            stroke=\"rgb(255, 255, 255)\"\r\n            fill=\"#f6a000\"\r\n          />\r\n        </AreaChart>\r\n        <div className=\"unfortunately\">\r\n          Unfortunately Carths Is Not Availibal For Mobile\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { bitcoinService } from \"../services/bitcoinServices\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport function BitcoinTable() {\r\n  const [coinRows, setcoinRows] = useState([]);\r\n  const {coinType} = useSelector(\r\n    (state) => state.bitcoinModule\r\n  );\r\n\r\n  useEffect(() => {\r\n    getBitcoinData(\"histoday\", 7);\r\n  }, [coinType]);\r\n\r\n  const getBitcoinData = (timeType, aggregate) => {\r\n    bitcoinService.getPriceBy(timeType, aggregate, coinType).then((prices) => {\r\n      let rows = prices.data.map((price) => {\r\n        if (timeType === \"histoday\") {\r\n          return createData(\r\n            price.Date.substring(0, 10),\r\n            price.High,\r\n            price.Low,\r\n            price.Open,\r\n            price.Close\r\n          );\r\n        } else {\r\n          return createData(\r\n            price.Date.substring(10, 16),\r\n            price.High,\r\n            price.Low,\r\n            price.Open,\r\n            price.Close\r\n          );\r\n        }\r\n      });\r\n      setcoinRows(rows);\r\n    });\r\n  };\r\n\r\n  function createData(date, high, low, open, close) {\r\n    return { date, high, low, open, close };\r\n  }\r\n\r\n  const buttons = [\r\n    <Button onClick={() => getBitcoinData(\"histominute\", 1)} key=\"one\">\r\n      1 Min\r\n    </Button>,\r\n    <Button onClick={() => getBitcoinData(\"histominute\", 5)} key=\"two\">\r\n      5 Min{\" \"}\r\n    </Button>,\r\n    <Button onClick={() => getBitcoinData(\"histohour\", 1)} key=\"two\">\r\n      1 Hour{\" \"}\r\n    </Button>,\r\n    <Button onClick={() => getBitcoinData(\"histoday\", 7)} key=\"two\">\r\n      1 Week{\" \"}\r\n    </Button>,\r\n  ];\r\n\r\n  if (!coinRows.length)\r\n    return (\r\n      <div className=\"loader\">\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          top={50}\r\n          margin-top={-50}\r\n          margin-left={0}\r\n          margin-right={0}\r\n          timeout={4000} //3 secs\r\n        />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"history-container\">\r\n      <ButtonGroup\r\n        className=\"buttons-group\"\r\n        variant=\"outlined\"\r\n        size=\"large\"\r\n        aria-label=\"large button group\"\r\n      >\r\n        {buttons}\r\n      </ButtonGroup>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 650 }} size=\"medium\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Time</TableCell>\r\n              <TableCell align=\"right\">High</TableCell>\r\n              <TableCell align=\"right\">Low</TableCell>\r\n              <TableCell align=\"right\">Open</TableCell>\r\n              <TableCell align=\"right\">Close</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {coinRows.map((row) => (\r\n              <TableRow\r\n                key={row.name}\r\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.date.split('/').reverse().join('/')}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.high.toLocaleString()}</TableCell>\r\n                <TableCell align=\"right\">{row.low.toLocaleString()}</TableCell>\r\n                <TableCell align=\"right\">{row.open.toLocaleString()}</TableCell>\r\n                <TableCell align=\"right\">{row.close.toLocaleString()}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import {OverView } from \"./pages/OverView\"\r\nimport { History } from \"./pages/History\"\r\n\r\nexport const routes = [\r\n\r\n    {\r\n        path: '/',\r\n        component: OverView\r\n    }, \r\n    {\r\n        path: '/history',\r\n        component: History\r\n        \r\n    }, \r\n]","import React from 'react'\r\nimport { BitcoinChart } from '../cmps/BitcoinChart'\r\n\r\nexport function OverView() {\r\n    return (\r\n        <div>\r\n            <BitcoinChart/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { bitcoinService } from \"../services/bitcoinServices\";\r\nimport { BitcoinTable } from \"../cmps/BitcoinTable\";\r\n\r\nexport function History() {\r\n  return <div>\r\n  <BitcoinTable></BitcoinTable>\r\n  </div>;\r\n}\r\n","import React from 'react'\r\n\r\nexport function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"coffee-rights\">© 2021 Itay Rosental</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport  function Tabs() {\r\n    return (\r\n        <div className=\"tabs-container\">\r\n           <Link className=\"page-link\" to=\"/\"><Button id=\"overview\" variant=\"contained\">Overview</Button></Link>\r\n           <Link className=\"page-link\" to=\"/history\"><Button id=\"history\" variant=\"contained\">history</Button></Link>\r\n        </div>\r\n    )\r\n}\r\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Header } from './cmps/Header';\nimport { routes } from './routes';\nimport { Footer } from './cmps/Footer';\nimport { Tabs } from './cmps/Tabs';\nimport './assets/style/main.scss'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <div className=\"main-container\">\n            <Tabs/>\n            {routes.map(route => {\n              return <Route key={route.path} exact component={route.component} path={route.path} />\n            })}\n          </div>\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    coinType : 'btc',\r\n    coinName : 'Bitcoin',\r\n    currCoinImg : 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png'\r\n  \r\n}\r\n\r\nexport function bitcoinReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_COIN_TYPE':\r\n            return { ...state, coinType: action.coinType }\r\n        case 'SET_COIN_IMG':\r\n            return { ...state, currCoinImg: action.imgUrl }\r\n        case 'SET_COIN_NAME':\r\n            return { ...state, coinName: action.coinName }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { bitcoinReducer } from '../store/reducer/bitcoin.reducer';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    bitcoinModule : bitcoinReducer,\r\n})\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(ReduxThunk))) //Passing the reducer\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {store} from './store/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}